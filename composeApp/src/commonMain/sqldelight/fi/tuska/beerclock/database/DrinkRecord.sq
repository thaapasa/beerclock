CREATE TABLE drinkRecord (
  id INTEGER PRIMARY KEY NOT NULL,
  import_id INTEGER UNIQUE,
  time INTEGER NOT NULL,
  name TEXT NOT NULL,
  category TEXT,
  quantity_liters REAL NOT NULL,
  abv REAL NOT NULL,
  image TEXT NOT NULL,
  producer TEXT NOT NULL COLLATE NOCASE DEFAULT '',
  search_term TEXT NOT NULL COLLATE NOCASE DEFAULT '',
  note TEXT,
  rating REAL,
  version INTEGER NOT NULL DEFAULT 0
);

CREATE INDEX drinkRecord_time ON drinkRecord(time);
CREATE INDEX drinkRecord_producer_name_idx ON drinkRecord(producer, name);

selectById:
SELECT *
FROM drinkRecord
WHERE id = :id;

selectByTime:
SELECT *
FROM drinkRecord
WHERE time >= :startTime AND time < :endTime
ORDER BY time ASC;

queryDetails:
SELECT COUNT(*) AS count,
  MIN(time) AS minTime,
  MAX(time) AS maxTime,
  SUM(quantity_liters) AS quantityLiters
FROM drinkRecord
WHERE producer = :producer AND name = :name;

getNotesAndRatingsForDrink:
SELECT time, note, rating
FROM drinkRecord
WHERE producer = :producer AND name = :name
  AND (note IS NOT NULL OR rating IS NOT NULL)
ORDER BY time DESC;

countUnitsByTime:
SELECT SUM(quantity_liters * abv * :multiplier)
FROM drinkRecord
WHERE time >= :startTime AND time < :endTime;

insert:
INSERT INTO drinkRecord(time, producer, name, search_term, rating, note,
  category, quantity_liters, abv, image)
VALUES (:time,  :producer, :name,
    CASE WHEN :producer = '' THEN :name ELSE :producer || ' ' || :name END,
    :rating, :note, :category, :quantityLiters, :abv, :image);

lastInsertedId:
SELECT last_insert_rowid();

import:
INSERT INTO drinkRecord(import_id, time, producer, name, search_term, category,
  rating, note, quantity_liters, abv, image)
VALUES (:importId, :time, :producer, :name,
  CASE WHEN :producer = '' THEN :name ELSE :producer || ' ' || :name END,
  :category, :rating, :note, :quantityLiters, :abv, :image)
ON CONFLICT (import_id) DO UPDATE
SET time=excluded.time, producer=excluded.producer, name=excluded.name,
    search_term=excluded.search_term, rating=excluded.rating,
    note=excluded.note, category=excluded.category,
    quantity_liters=excluded.quantity_liters, abv=excluded.abv, image=excluded.image,
    version=version + 1;

update:
UPDATE drinkRecord
SET time=:time, producer=:producer, name=:name,
  search_term=CASE WHEN :producer = '' THEN :name ELSE :producer || ' ' || :name END,
  rating=:rating, note=:note, category=:category, quantity_liters=:quantityLiters,
  abv=:abv, image=:image, version=version + 1
WHERE id=:id;

deleteById:
DELETE FROM drinkRecord
WHERE id = :id;

selectLatestDrinks:
SELECT DISTINCT producer, name, category, quantity_liters, abv, image
FROM drinkRecord
ORDER BY time DESC
LIMIT :limit;
