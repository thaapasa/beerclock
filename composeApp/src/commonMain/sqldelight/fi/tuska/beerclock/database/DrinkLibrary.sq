CREATE TABLE drinkLibrary (
  id INTEGER PRIMARY KEY NOT NULL,
  name TEXT NOT NULL COLLATE NOCASE,
  created INTEGER NOT NULL,
  updated INTEGER NOT NULL,
  category TEXT,
  quantity_liters REAL NOT NULL,
  abv REAL NOT NULL,
  image TEXT NOT NULL,
  drink_count INTEGER NOT NULL DEFAULT 0
);

CREATE UNIQUE INDEX drinkLibrary_name_idx ON drinkLibrary(name);

hasDrinks:
SELECT TRUE AS "hasDrinks"
  FROM drinkLibrary
  LIMIT 1;

selectAll:
SELECT *
FROM drinkLibrary;

selectAllByCategory:
SELECT *
FROM drinkLibrary
WHERE category IN :categories OR category IS NULL;

insert:
INSERT INTO drinkLibrary(name, category, quantity_liters, abv, image, created, updated)
VALUES (:name, :category, :quantityLiters, :abv, :image,
    strftime('%s', 'now'), strftime('%s', 'now'))
ON CONFLICT (name)
DO UPDATE SET category = excluded.category,
    quantity_liters = excluded.quantity_liters,
    abv = excluded.abv,
    image = excluded.image,
    updated = strftime('%s', 'now');

update:
UPDATE drinkLibrary
SET name=:name, category=:category, quantity_liters=:quantityLiters, abv=:abv, image=:image, updated=strftime('%s', 'now')
WHERE id=:id;

recordDrunk:
INSERT INTO drinkLibrary(name, category, quantity_liters, abv, image, drink_count, created, updated)
VALUES (:name, :category, :quantityLiters, :abv, :image, 1,
    strftime('%s', 'now'), strftime('%s', 'now'))
ON CONFLICT (name)
DO UPDATE SET category = excluded.category,
  image = excluded.image,
  drink_count = drink_count + 1,
  abv = excluded.abv,
  updated = strftime('%s', 'now');
-- Do not update quantity, as that may change

importDrunk:
UPDATE drinkLibrary
SET drink_count = drink_count + 1,
  updated = strftime('%s', 'now')
WHERE name=:name;


deleteById:
DELETE FROM drinkLibrary
WHERE id = :id;

findMatchingByName:
SELECT *
FROM drinkLibrary
WHERE name LIKE '%' || :name || '%'
LIMIT :limit;
