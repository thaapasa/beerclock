CREATE TABLE drinkLibrary (
  id INTEGER PRIMARY KEY NOT NULL,
  name TEXT NOT NULL COLLATE NOCASE,
  created INTEGER NOT NULL,
  updated INTEGER NOT NULL,
  category TEXT,
  quantity_liters REAL NOT NULL,
  abv REAL NOT NULL,
  image TEXT NOT NULL,
  producer TEXT NOT NULL COLLATE NOCASE DEFAULT '',
  search_term TEXT NOT NULL COLLATE NOCASE DEFAULT '',
  note TEXT
);

CREATE UNIQUE INDEX drinkLibrary_name_idx ON drinkLibrary(producer, name);
CREATE INDEX drinkLibrary_search_term_idx ON drinkLibrary(search_term);

hasDrinks:
SELECT TRUE AS "hasDrinks"
  FROM drinkLibrary
  LIMIT 1;

selectAll:
SELECT *
FROM drinkLibrary
ORDER BY search_term;

selectById:
SELECT *
FROM drinkLibrary
WHERE id = :id;

selectAllByCategory:
SELECT *
FROM drinkLibrary
WHERE category IN :categories OR category IS NULL
ORDER BY search_term;

insert:
INSERT INTO drinkLibrary(producer, name, search_term, category, quantity_liters, abv,
    image, note, created, updated)
VALUES (:producer, :name,
    CASE WHEN :producer = '' THEN :name ELSE :producer || ' ' || :name END,
    :category, :quantityLiters, :abv,
    :image, :note,
    strftime('%s', 'now'), strftime('%s', 'now'))
ON CONFLICT (producer, name)
DO UPDATE SET category = excluded.category,
    quantity_liters = excluded.quantity_liters,
    abv = excluded.abv,
    image = excluded.image,
    note = excluded.note,
    updated = strftime('%s', 'now');

lastInsertedId:
SELECT last_insert_rowid();

update:
UPDATE drinkLibrary
SET name=:name, producer=:producer,
    search_term=CASE WHEN :producer = '' THEN :name ELSE :producer || ' ' || :name END,
    category=:category, quantity_liters=:quantityLiters, abv=:abv,
    image=:image, note=:note, updated=strftime('%s', 'now')
WHERE id=:id;

recordDrunk:
INSERT INTO drinkLibrary(producer, name, search_term, category, quantity_liters, abv, image, note,
  created, updated)
VALUES (:producer, :name,
    CASE WHEN :producer = '' THEN :name ELSE :producer || ' ' || :name END,
    :category, :quantityLiters, :abv, :image, :note,
    strftime('%s', 'now'), strftime('%s', 'now'))
ON CONFLICT (producer, name)
DO UPDATE SET category = excluded.category,
  image = excluded.image,
  abv = excluded.abv,
  updated = strftime('%s', 'now');
-- Do not update quantity, as that may change

deleteById:
DELETE FROM drinkLibrary
WHERE id = :id;

findMatchingByName:
SELECT *
FROM drinkLibrary
WHERE search_term LIKE '%' || :name || '%'
ORDER BY search_term
LIMIT :limit;
